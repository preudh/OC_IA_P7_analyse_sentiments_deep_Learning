Pour Docker desktop, il faut installer Docker desktop sur votre machine.

**Utilisation de Docker desktop pour le dev en local**
docker-compose -f docker-compose.dev.yml down
docker-compose -f docker-compose.dev.yml build --no-cache
docker-compose -f docker-compose.dev.yml up -d

**Utilisation de Docker desktop**
Pour lancer l'API avec FastAPI en local, utilisez la commande suivante dans votre terminal :
uvicorn api.main:app --host 127.0.0.1 --port 8000 --reload

**Utilisation de Docker desktop**
1.Essais de l'API avec un texte en anglais simple, endpoint/predict :
{
    "text": "This is a great day!"
}

2.Feedback de l'API à écrire dans le fichier feedback.json, endpoint/feedback :
{
    "text": "This is a great day!",
    "prediction": "positive",
    "validation": "true"
}
{
    "text": "This is a great day!",
    "prediction": "positive",
    "validation": "true"
}

Server response code 200 (fait par l'api) :
{
  "message": "Feedback reçu, merci !"
}

**Lancer les tests unitaires avec pytest en local**
commande à executer dans le terminal de votre IDE :
pytest api/test_api.py

**Githubactions CI avec Docker**
Ici on crée un conteneur Docker pour l'API FastAPI et on lance les tests unitaires avec pytest.
creation du fichier .github/workflows/deploy.yml
creation pipeline CI/CD avec Githubactions
définir les secrets dans les paramètres du dépôt GitHub. rien à faire pour le moment

**Githubactions CD Azure**
Ici on crée un conteneur Docker pour l'API FastAPI et on déploie l'API sur Azure.
creation compte Azure free
creation du service principal
définir les secrets dans les paramètres du dépôt GitHub.

**Lancer Mlflow en local**
run fichier "launch_mlflow.py" puis adresse http://127.0.0.1:5000